#!/usr/bin/env node

/**
 * Cloudflare Pages ÊûÑÂª∫ËÑöÊú¨
 * Âü∫‰∫é build.jsÔºå‰ΩÜÈíàÂØπ Cloudflare Pages ÁéØÂ¢ÉËøõË°å‰∫Ü‰ºòÂåñ
 */

const fs = require('fs');
const path = require('path');
const archiver = require('archiver');

// ÁéØÂ¢ÉÊ£ÄÊü•
function checkEnvironment() {
    console.log('üîç Ê£ÄÊü• Cloudflare Pages ÊûÑÂª∫ÁéØÂ¢É...');
    
    if (!fs.existsSync('manifest.json')) {
        console.error('‚ùå Êú™ÊâæÂà∞ manifest.json Êñá‰ª∂');
        process.exit(1);
    }
    
    console.log('‚úÖ ÁéØÂ¢ÉÊ£ÄÊü•ÈÄöËøá');
}

// ÊµèËßàÂô®ÈÖçÁΩÆ
const browsers = {
    chrome: {
        name: 'Chrome',
        manifestVersion: 3,
        zipName: 'ADHDGoFly-Plugin-Chrome-v{version}.zip'
    },
    firefox: {
        name: 'Firefox', 
        manifestVersion: 2,
        zipName: 'ADHDGoFly-Plugin-Firefox-v{version}.zip'
    }
};

async function main() {
    try {
        checkEnvironment();
        
        // ÂàõÂª∫ËæìÂá∫ÁõÆÂΩï
        const outputDir = 'public';
        if (!fs.existsSync(outputDir)) {
            fs.mkdirSync(outputDir, { recursive: true });
        }
        
        // ËØªÂèñÁâàÊú¨‰ø°ÊÅØ
        const manifest = JSON.parse(fs.readFileSync('manifest.json', 'utf8'));
        const version = manifest.version;
        
        console.log(`üì¶ ÂºÄÂßãÊûÑÂª∫ ADHDGoFly Plugin v${version} for Cloudflare Pages`);
        
        // Ê∏ÖÁêÜÊóßÊñá‰ª∂
        const files = fs.readdirSync(outputDir);
        files.forEach(file => {
            if (file.endsWith('.zip')) {
                fs.unlinkSync(path.join(outputDir, file));
            }
        });
        
        // ÈúÄË¶ÅÂåÖÂê´ÁöÑÊñá‰ª∂
        const includeFiles = [
            'manifest.json',
            'background.js',
            'content.js',
            'popup.html',
            'popup.js',
            'styles.css',
            'settings.js',
            'settings.css',
            'content/',
            'dictionaries/'
        ];
        
        // Ê£ÄÊü•ÂøÖË¶ÅÊñá‰ª∂
        console.log('üîç Ê£ÄÊü•ÂøÖË¶ÅÊñá‰ª∂...');
        for (const file of includeFiles) {
            if (!fs.existsSync(file)) {
                console.error(`‚ùå Áº∫Â∞ëÂøÖË¶ÅÊñá‰ª∂: ${file}`);
                process.exit(1);
            }
        }
        
        const buildResults = [];
        
        // ‰∏∫ÊØè‰∏™ÊµèËßàÂô®ÊûÑÂª∫
        for (const [browserKey, browserConfig] of Object.entries(browsers)) {
            console.log(`\nüî® ÊûÑÂª∫ ${browserConfig.name} ÁâàÊú¨...`);
            
            const zipName = browserConfig.zipName.replace('{version}', version);
            const zipPath = path.join(outputDir, zipName);
            
            await createZipFile(zipPath, includeFiles, browserConfig, version);
            
            const stats = fs.statSync(zipPath);
            const sizeKB = (stats.size / 1024).toFixed(2);
            
            buildResults.push({
                browser: browserConfig.name,
                file: zipName,
                size: sizeKB
            });
            
            console.log(`‚úÖ ${browserConfig.name} ÊûÑÂª∫ÂÆåÊàê: ${zipName} (${sizeKB} KB)`);
        }
        
        // ËæìÂá∫ÊûÑÂª∫ÁªìÊûú
        console.log('\nüìä ÊûÑÂª∫ÁªìÊûú:');
        let totalSize = 0;
        buildResults.forEach(result => {
            console.log(`   ${result.browser}: ${result.file} (${result.size} KB)`);
            totalSize += parseFloat(result.size);
        });
        console.log(`   ÊÄªÂ§ßÂ∞è: ${totalSize.toFixed(2)} KB`);
        
        // ÁîüÊàêÂä®ÊÄÅ index.html (Landing Page)
        console.log('\nüåê ÁîüÊàê Landing Page...');
        
        const downloadLinksHtml = buildResults.map(result => 
            `<a href="./${result.file}" class="download-btn ${result.browser.toLowerCase()}" download>
                ‚¨áÔ∏è ‰∏ãËΩΩ ${result.browser} ÁâàÊú¨ (${result.size} KB)
            </a>`
        ).join('\n                    ');
        
        const indexTemplate = `<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ADHDGoFly - Êô∫ËÉΩÈòÖËØªÂä©ÊâãÊèí‰ª∂</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            text-align: center;
            color: white;
            margin-bottom: 50px;
            padding: 50px 0;
        }
        
        .header h1 {
            font-size: 3.5rem;
            margin-bottom: 20px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }
        
        .header p {
            font-size: 1.3rem;
            opacity: 0.9;
            max-width: 600px;
            margin: 0 auto;
        }
        
        .main-content {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .features {
            padding: 60px 40px;
            text-align: center;
        }
        
        .features h2 {
            font-size: 2.5rem;
            margin-bottom: 40px;
            color: #333;
        }
        
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 30px;
            margin-top: 40px;
        }
        
        .feature-card {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 15px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
        }
        
        .feature-icon {
            font-size: 3rem;
            margin-bottom: 20px;
        }
        
        .feature-card h3 {
            font-size: 1.5rem;
            margin-bottom: 15px;
            color: #333;
        }
        
        .feature-card p {
            color: #666;
            line-height: 1.6;
        }
        
        .download-section {
            background: #f8f9fa;
            padding: 60px 40px;
            text-align: center;
        }
        
        .download-section h2 {
            font-size: 2.5rem;
            margin-bottom: 20px;
            color: #333;
        }
        
        .download-section p {
            font-size: 1.2rem;
            color: #666;
            margin-bottom: 40px;
        }
        
        .download-options {
            display: flex;
            justify-content: center;
            gap: 20px;
            flex-wrap: wrap;
            margin-bottom: 30px;
        }
        
        .download-btn {
            display: inline-block;
            padding: 15px 30px;
            border-radius: 10px;
            text-decoration: none;
            font-weight: 600;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            min-width: 200px;
        }
        
        .download-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }
        
        .download-btn.chrome {
            background: #4285f4;
            color: white;
        }
        
        .download-btn.firefox {
            background: #ff9500;
            color: white;
        }
        
        .download-btn.github {
            background: #333;
            color: white;
        }
        
        .download-btn.baidu {
            background: #2932e1;
            color: white;
        }
        
        .download-btn.direct {
            background: #28a745;
            color: white;
        }
        
        .tips-section {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 10px;
            padding: 20px;
            margin-top: 30px;
            text-align: center;
        }
        
        .tips-section p {
            color: #856404;
            margin: 0;
        }
        
        .version-info {
            background: #f8f9fa;
            padding: 30px;
            text-align: center;
            border-top: 1px solid #eee;
        }
        
        .version-info p {
            color: #666;
            margin-bottom: 10px;
        }
        
        .contact-info {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 10px;
            padding: 20px;
            margin-top: 30px;
            text-align: center;
        }
        
        .contact-info p {
            color: #856404;
            margin: 0;
        }
        
        @media (max-width: 768px) {
            .header h1 {
                font-size: 2.5rem;
            }
            
            .features, .download-section {
                padding: 40px 20px;
            }
            
            .feature-grid {
                grid-template-columns: 1fr;
            }
            
            .download-options {
                flex-direction: column;
                align-items: center;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header class="header">
            <h1>ADHDGoFly</h1>
            <p>Êô∫ËÉΩÈòÖËØªÂä©Êâã - ËÆ©ÁΩëÈ°µÈòÖËØªÊõ¥ËΩªÊùæÔºåËÆ©Â≠¶‰π†Êõ¥È´òÊïà</p>
        </header>
        
        <main class="main-content">
            <section class="features">
                <h2>Ê†∏ÂøÉÂäüËÉΩ</h2>
                <div class="feature-grid">
                    <div class="feature-card">
                        <div class="feature-icon">üéØ</div>
                        <h3>Êô∫ËÉΩËØçÊÄßÊ†áÊ≥®</h3>
                        <p>Ëá™Âä®ËØÜÂà´ÁΩëÈ°µÊñáÊú¨‰∏≠ÁöÑËØçÊÄßÔºåÁî®‰∏çÂêåÈ¢úËâ≤È´ò‰∫ÆÊòæÁ§∫ÂêçËØç„ÄÅÂä®ËØç„ÄÅÂΩ¢ÂÆπËØçÁ≠âÔºåÂ∏ÆÂä©ÁêÜËß£Âè•Â≠êÁªìÊûÑ</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">üåç</div>
                        <h3>Â§öËØ≠Ë®ÄÊîØÊåÅ</h3>
                        <p>ÊîØÊåÅ‰∏≠Êñá„ÄÅËã±Êñá„ÄÅÊó•Êñá„ÄÅÊ≥ïÊñá„ÄÅË•øÁè≠ÁâôÊñá„ÄÅ‰øÑÊñáÁ≠âÂ§öÁßçËØ≠Ë®ÄÁöÑÊô∫ËÉΩËØÜÂà´ÂíåÂ§ÑÁêÜ</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">‚ö°</div>
                        <h3>ÂÆûÊó∂Â§ÑÁêÜ</h3>
                        <p>È°µÈù¢Âä†ËΩΩÊó∂Ëá™Âä®Â§ÑÁêÜÊñáÊú¨ÔºåÊó†ÈúÄÊâãÂä®Êìç‰ΩúÔºåÊèê‰æõÊµÅÁïÖÁöÑÈòÖËØª‰ΩìÈ™å</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">üé®</div>
                        <h3>‰∏™ÊÄßÂåñËÆæÁΩÆ</h3>
                        <p>ÂèØËá™ÂÆö‰πâÈ¢úËâ≤ÊñπÊ°à„ÄÅÂºÄÂÖ≥ÁâπÂÆöÂäüËÉΩÔºåÊ†πÊçÆ‰∏™‰∫∫ÂñúÂ•ΩË∞ÉÊï¥ÈòÖËØªËæÖÂä©ÊïàÊûú</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">üîÑ</div>
                        <h3>Ëá™Âä®Êõ¥Êñ∞</h3>
                        <p>ÂÜÖÁΩÆÁâàÊú¨Ê£ÄÊµãÂäüËÉΩÔºåËá™Âä®ÊèêÈÜíÁî®Êà∑Êõ¥Êñ∞Âà∞ÊúÄÊñ∞ÁâàÊú¨ÔºåÁ°Æ‰øùÂäüËÉΩÂÆåÂñÑ</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">üöÄ</div>
                        <h3>ËΩªÈáèÈ´òÊïà</h3>
                        <p>‰ºòÂåñÁöÑÁÆóÊ≥ïËÆæËÆ°ÔºåÂç†Áî®ËµÑÊ∫êÂ∞ëÔºå‰∏çÂΩ±ÂìçÁΩëÈ°µÊ≠£Â∏∏ÊµèËßàÈÄüÂ∫¶</p>
                    </div>
                </div>
            </section>
            
            <section class="download-section">
                <h2>Á´ãÂç≥‰∏ãËΩΩ</h2>
                <p>ÈÄâÊã©ÈÄÇÂêàÊÇ®ÊµèËßàÂô®ÁöÑÁâàÊú¨ÔºåÂºÄÂßãÊõ¥Êô∫ËÉΩÁöÑÈòÖËØª‰ΩìÈ™å</p>
                
                <div class="download-options">
                    ${downloadLinksHtml}
                    <a href="https://github.com/burenweiye/ADHDGoFly-Plugin/releases/latest" class="download-btn github" target="_blank">
                        üì¶ GitHub Release
                    </a>
                    <a href="#" class="download-btn baidu" onclick="alert('ÁôæÂ∫¶ÁΩëÁõòÈìæÊé•Ôºö\\nÈìæÊé•: https://pan.baidu.com/s/example\\nÊèêÂèñÁ†Å: abcd')">
                        ‚òÅÔ∏è ÁôæÂ∫¶ÁΩëÁõò‰∏ãËΩΩ
                    </a>
                </div>
                
                <div class="contact-info">
                    <p>Â¶ÇÊûú‰∏ãËΩΩÈìæÊé•ÈÉΩ‰∏çÂèØÁî®ÔºåËØ∑ËÅîÁ≥ª WeChat: zuoguyoupan2023</p>
                </div>
            </section>
        </main>
        
        <footer class="version-info">
            <p><strong>ÂΩìÂâçÁâàÊú¨:</strong> v${version}</p>
            <p>ÈÄÇÁî®‰∫é Chrome„ÄÅEdge„ÄÅFirefox Á≠âÁé∞‰ª£ÊµèËßàÂô®</p>
            <p>¬© 2024 ADHDGoFly Plugin. ‰∏ì‰∏∫ÊèêÂçáÈòÖËØª‰ΩìÈ™åËÄåËÆæËÆ°„ÄÇ</p>
        </footer>
    </div>
</body>
</html>`;
        
        // ÂÜôÂÖ• index.html
        fs.writeFileSync(path.join(outputDir, 'index.html'), indexTemplate);
        console.log('‚úÖ Landing Page ÁîüÊàêÂÆåÊàê: public/index.html');
        
        console.log('\nüéâ Cloudflare Pages ÊûÑÂª∫ÂÆåÊàê!');
        console.log('üìÅ ËæìÂá∫ÁõÆÂΩï: public/');
        console.log('üåê Landing Page: public/index.html');
        console.log('üì¶ Êèí‰ª∂ÂåÖ:');
        buildResults.forEach(result => {
            console.log(`   - public/${result.file}`);
        });
        
    } catch (error) {
        console.error('‚ùå ÊûÑÂª∫Â§±Ë¥•:', error.message);
        process.exit(1);
    }
}

// ÂàõÂª∫ ZIP Êñá‰ª∂
async function createZipFile(zipPath, includeFiles, browserConfig, version) {
    return new Promise((resolve, reject) => {
        const output = fs.createWriteStream(zipPath);
        const archive = archiver('zip', {
            zlib: { level: 9 }
        });
        
        output.on('close', () => {
            resolve();
        });
        
        archive.on('error', (err) => {
            reject(err);
        });
        
        archive.pipe(output);
        
        // Ê∑ªÂä†Êñá‰ª∂Âà∞ÂéãÁº©ÂåÖ
        includeFiles.forEach(file => {
            if (fs.statSync(file).isDirectory()) {
                archive.directory(file, file);
            } else {
                archive.file(file, { name: file });
            }
        });
        
        archive.finalize();
    });
}

// ËøêË°å‰∏ªÂáΩÊï∞
if (require.main === module) {
    main();
}

module.exports = { main, createZipFile };