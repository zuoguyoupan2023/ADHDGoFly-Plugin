#!/usr/bin/env node

/**
 * ADHDGoFly Plugin Ëá™Âä®ÂåñÊûÑÂª∫ËÑöÊú¨
 * ÈÄÇÁî®‰∫é Cloudflare Pages ÈÉ®ÁΩ≤ÁéØÂ¢É
 * ‰ªé manifest.json ÊèêÂèñÁâàÊú¨‰ø°ÊÅØÔºåÁîüÊàêÊ†áÂáÜÂåñÁöÑÊèí‰ª∂ÂåÖ
 * 
 * ÁéØÂ¢ÉË¶ÅÊ±Ç:
 * - Node.js 14+ (Cloudflare Pages ÈªòËÆ§Êèê‰æõ)
 * - zip ÂëΩ‰ª§ (Á≥ªÁªüËá™Â∏¶)
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');
const archiver = require('archiver');

// Ê£ÄÊü•ËøêË°åÁéØÂ¢É - ÁßªÈô§zipÂëΩ‰ª§‰æùËµñ
function checkEnvironment() {
    // ‰∏çÂÜçÊ£ÄÊü•zipÂëΩ‰ª§Ôºå‰ΩøÁî®Node.jsÂéüÁîüarchiverÂ∫ì
    console.log('‚úÖ ÁéØÂ¢ÉÊ£ÄÊü•ÈÄöËøáÔºå‰ΩøÁî®Node.jsÂéüÁîüÂéãÁº©');
}

// ÊµèËßàÂô®ÈÖçÁΩÆ
const browserConfigs = {
    chrome: {
        suffix: 'chrome',
        manifestChanges: {
            name: 'ADHDGoFly, ÁÇπ‰∫Æ‰Ω†ÁöÑËßÜÈáé (Chrome)',
            description: 'Text highlighting for better reading - Chrome Edition'
        }
    },
    edge: {
        suffix: 'edge', 
        manifestChanges: {
            name: 'ADHDGoFly, ÁÇπ‰∫Æ‰Ω†ÁöÑËßÜÈáé (Edge)',
            description: 'Text highlighting for better reading - Edge Edition'
        }
    }
};

// ‰∏ªÂáΩÊï∞
async function main() {
    console.log('üöÄ ÂºÄÂßãÊûÑÂª∫ ADHDGoFly Êèí‰ª∂ÂèëÂ∏ÉÂåÖ (Â§öÊµèËßàÂô®ÁâàÊú¨)...');
    
    // Ê£ÄÊü•ËøêË°åÁéØÂ¢É
    checkEnvironment();
    
    // ÂàõÂª∫publicËæìÂá∫ÁõÆÂΩï
    const outputDir = 'public';
    if (!fs.existsSync(outputDir)) {
        fs.mkdirSync(outputDir, { recursive: true });
        console.log('üìÅ ÂàõÂª∫ËæìÂá∫ÁõÆÂΩï: public/');
    }
    
    // Ê£ÄÊü•ÂøÖË¶ÅÊñá‰ª∂
    if (!fs.existsSync('manifest.json')) {
        console.error('‚ùå ÈîôËØØ: Êâæ‰∏çÂà∞ manifest.json Êñá‰ª∂');
        process.exit(1);
    }
    
    // ËØªÂèñ manifest.json
    let baseManifest;
    try {
        const manifestContent = fs.readFileSync('manifest.json', 'utf8');
        baseManifest = JSON.parse(manifestContent);
    } catch (error) {
        console.error('‚ùå ÈîôËØØ: Êó†Ê≥ïËß£Êûê manifest.json Êñá‰ª∂:', error.message);
        process.exit(1);
    }
    
    // ÊèêÂèñÁâàÊú¨Âè∑ÂíåÈ°πÁõÆ‰ø°ÊÅØ
    const version = baseManifest.version;
    const projectName = 'ADHDGoFly-Plugin';
    
    console.log(`üì¶ È°πÁõÆÂêçÁß∞: ${projectName}`);
     console.log(`üè∑Ô∏è  ÁâàÊú¨Âè∑: ${version}`);
     
     // Ê∏ÖÁêÜÊóßÁöÑÊûÑÂª∫Êñá‰ª∂
     try {
         const oldFiles = fs.readdirSync('.').filter(file => 
             file.endsWith('.zip') || file.endsWith('.7z')
         );
         oldFiles.forEach(file => {
             fs.unlinkSync(file);
             console.log(`üßπ Âà†Èô§ÊóßÊñá‰ª∂: ${file}`);
         });
     } catch (error) {
         console.log('üßπ Ê∏ÖÁêÜÊóßÊñá‰ª∂ (Êó†ÊóßÊñá‰ª∂)');
     }
     
     // ÂÆö‰πâË¶ÅÂåÖÂê´ÁöÑÊñá‰ª∂ÂíåÁõÆÂΩï
     const includeFiles = [
         'background.js',
         'content.js',
         'popup.html',
         'popup.js',
         'styles.css',
         'settings.js',
         'settings.css',
         'content/',
         'dictionaries/'
     ];
     
     // Ê£ÄÊü•ÊâÄÊúâÂøÖË¶ÅÊñá‰ª∂ÊòØÂê¶Â≠òÂú®
     const missingFiles = includeFiles.filter(file => !fs.existsSync(file));
     if (missingFiles.length > 0) {
         console.error('‚ùå ÈîôËØØ: Áº∫Â∞ëÂøÖË¶ÅÊñá‰ª∂:', missingFiles.join(', '));
         process.exit(1);
     }
     
     // ‰∏∫ÊØè‰∏™ÊµèËßàÂô®ÊûÑÂª∫ÁâàÊú¨
     const buildResults = [];
     
     for (const [browserName, config] of Object.entries(browserConfigs)) {
         console.log(`\nüåê ÊûÑÂª∫ ${browserName.toUpperCase()} ÁâàÊú¨...`);
         
         // ÂàõÂª∫ÊµèËßàÂô®ÁâπÂÆöÁöÑmanifest
         const browserManifest = {
             ...baseManifest,
             ...config.manifestChanges
         };
         
         // ÁîüÊàê‰∏¥Êó∂manifestÊñá‰ª∂
         const tempManifestPath = `manifest-${browserName}.json`;
         fs.writeFileSync(tempManifestPath, JSON.stringify(browserManifest, null, 2));
         
         // ÂàõÂª∫ÂåÖÂê´Êñá‰ª∂ÂàóË°®ÔºàÂåÖÂê´‰∏¥Êó∂manifestÔºâ
         const browserIncludeFiles = [
             tempManifestPath,
             ...includeFiles
         ];
         
         // ÁîüÊàêzipÊñá‰ª∂ÂêçÔºàËæìÂá∫Âà∞publicÁõÆÂΩïÔºâ
         const zipName = path.join(outputDir, `${projectName}-v${version}-${config.suffix}.zip`);
         console.log(`üìÅ ËæìÂá∫Êñá‰ª∂: ${zipName}`);
         
         try {
             await createZipFile(zipName, browserIncludeFiles, browserName, tempManifestPath);
             
             // Ê£ÄÊü•Êñá‰ª∂ÊòØÂê¶ÂàõÂª∫ÊàêÂäü
             if (!fs.existsSync(zipName)) {
                 throw new Error(`${browserName} ZIP Êñá‰ª∂ÂàõÂª∫Â§±Ë¥•`);
             }
             
             const stats = fs.statSync(zipName);
             const fileSizeMB = (stats.size / (1024 * 1024)).toFixed(1);
             
             buildResults.push({
                 browser: browserName,
                 zipName,
                 size: fileSizeMB
             });
             
             console.log(`‚úÖ ${browserName.toUpperCase()} ÁâàÊú¨ÊûÑÂª∫ÂÆåÊàê: ${fileSizeMB}MB`);
             
         } catch (error) {
             console.error(`‚ùå ${browserName.toUpperCase()} ÁâàÊú¨ÊûÑÂª∫Â§±Ë¥•:`, error.message);
             throw error;
         } finally {
             // Ê∏ÖÁêÜ‰∏¥Êó∂manifestÊñá‰ª∂
             if (fs.existsSync(tempManifestPath)) {
                 fs.unlinkSync(tempManifestPath);
             }
         }
     }
     
     // ÊòæÁ§∫ÊûÑÂª∫ÊÄªÁªì
     console.log('\nüéâ Â§öÊµèËßàÂô®ÊûÑÂª∫ÂÆåÊàê!');
     buildResults.forEach(result => {
         console.log(`   üì¶ ${result.browser.toUpperCase()}: ${result.zipName} (${result.size}MB)`);
     });
     
     const totalSize = buildResults.reduce((sum, result) => sum + parseFloat(result.size), 0).toFixed(1);
     console.log(`üìä ÊÄªÂ§ßÂ∞è: ${totalSize}MB`);
     console.log('‚úÖ Â§öÊµèËßàÂô®ÊûÑÂª∫ÊàêÂäüÔºÅ');
       
       // ÁîüÊàêÂä®ÊÄÅÁöÑ index.html
        console.log('üîÑ ÁîüÊàêÂä®ÊÄÅ landing page...');
        try {
            // ÁîüÊàê‰∏ãËΩΩÈìæÊé•HTML - Âü∫‰∫éÁâàÊú¨Âè∑Ëá™Âä®ÂåπÈÖç
         const downloadLinksHtml = buildResults.map(result => {
             const browserDisplayName = result.browser === 'chrome' ? 'Chrome' : 'Edge';
             const versionedFileName = `${projectName}-v${version}-${result.browser}.zip`;
             return `
                    <div class="download-item">
                        <h3>${browserDisplayName} ÁâàÊú¨</h3>
                        <p>ÁâàÊú¨: v${version} | Â§ßÂ∞è: ${result.size}MB</p>
                        <a href="./${versionedFileName}" class="download-btn" download>
                            <span class="icon">üì¶</span>
                            ‰∏ãËΩΩ ${browserDisplayName} v${version}
                        </a>
                        <div class="version-info">
                            <small style="color: #333;">Êñá‰ª∂Âêç: ${versionedFileName}</small>
                        </div>
                    </div>`;
         }).join('');
            
            const indexTemplate = `<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ADHDGoFly - Êô∫ËÉΩÈòÖËØªÂä©ÊâãÊèí‰ª∂ (Â§öÊµèËßàÂô®ÁâàÊú¨)</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            text-align: center;
            color: white;
            margin-bottom: 50px;
            padding: 50px 0;
        }
        
        .header h1 {
            font-size: 3.5rem;
            margin-bottom: 20px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }
        
        .header p {
            font-size: 1.3rem;
            opacity: 0.9;
            max-width: 600px;
            margin: 0 auto;
        }
        
        .main-content {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
            margin-bottom: 30px;
        }
        
        .features {
            padding: 60px 40px;
        }
        
        .features h2 {
            text-align: center;
            font-size: 2.5rem;
            margin-bottom: 50px;
            color: #333;
        }
        
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 30px;
            margin-bottom: 50px;
        }
        
        .feature-card {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 15px;
            text-align: center;
            transition: transform 0.3s ease;
        }
        
        .feature-card:hover {
            transform: translateY(-5px);
        }
        
        .feature-icon {
            font-size: 3rem;
            margin-bottom: 20px;
        }
        
        .feature-card h3 {
            font-size: 1.5rem;
            margin-bottom: 15px;
            color: #667eea;
        }
        
        .feature-card p {
            color: #666;
            line-height: 1.6;
        }
        
        .download-section {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            padding: 60px 40px;
            text-align: center;
        }
        
        .download-section h2 {
            color: white;
            font-size: 2.5rem;
            margin-bottom: 30px;
        }
        
        .download-section p {
            color: white;
            opacity: 0.9;
            font-size: 1.2rem;
            margin-bottom: 40px;
        }
        
        .download-options {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            max-width: 800px;
            margin: 0 auto 30px auto;
        }
        
        .browser-downloads {
            margin-top: 30px;
        }
        
        .download-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            max-width: 800px;
            margin: 0 auto;
        }
        
        .download-item {
            background: rgba(255,255,255,0.1);
            padding: 20px;
            border-radius: 15px;
            text-align: center;
            border: 1px solid rgba(255,255,255,0.2);
        }
        
        .download-item h3 {
            color: white;
            margin-bottom: 10px;
            font-size: 1.2rem;
        }
        
        .download-item p {
             color: rgba(255,255,255,0.8);
             margin-bottom: 15px;
             font-size: 0.9rem;
         }
         
         .version-info {
             margin-top: 10px;
             padding-top: 10px;
             border-top: 1px solid rgba(255,255,255,0.1);
         }
         
         .version-info small {
             color: rgba(255,255,255,0.6);
             font-size: 0.8rem;
             font-family: monospace;
         }
         
         .installation-guide {
             margin-top: 50px;
             padding: 30px;
             background: rgba(255,255,255,0.05);
             border-radius: 20px;
             border: 1px solid rgba(255,255,255,0.1);
         }
         
         .guide-grid {
             display: grid;
             grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
             gap: 30px;
             margin-bottom: 30px;
         }
         
         .guide-item {
             background: rgba(255,255,255,0.08);
             padding: 25px;
             border-radius: 15px;
             border: 1px solid rgba(255,255,255,0.1);
         }
         
         .guide-item h4 {
             color: white;
             margin-bottom: 15px;
             font-size: 1.1rem;
         }
         
         .guide-item ol {
             color: rgba(255,255,255,0.9);
             padding-left: 20px;
             line-height: 1.8;
         }
         
         .guide-item li {
             margin-bottom: 8px;
         }
         
         .guide-item code {
             background: rgba(0,0,0,0.3);
             padding: 2px 6px;
             border-radius: 4px;
             font-family: monospace;
             color: #ffd700;
         }
         
         .tips-section {
             background: rgba(255,215,0,0.1);
             padding: 20px;
             border-radius: 10px;
             border: 1px solid rgba(255,215,0,0.2);
         }
         
         .tips-section ul {
             color: rgba(255,255,255,0.9);
             padding-left: 20px;
             line-height: 1.6;
         }
         
         .tips-section li {
             margin-bottom: 5px;
         }
        
        .download-btn {
            display: inline-block;
            padding: 15px 30px;
            background: white;
            color: #667eea;
            text-decoration: none;
            border-radius: 50px;
            font-weight: bold;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }
        
        .download-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.3);
        }
        
        .download-btn.github {
            background: #24292e;
            color: white;
        }
        
        .download-btn.baidu {
            background: #2932e1;
            color: white;
        }
        
        .download-btn.direct {
            background: #28a745;
            color: white;
        }
        
        .version-info {
            background: #f8f9fa;
            padding: 30px;
            text-align: center;
            border-top: 1px solid #eee;
        }
        
        .version-info p {
            color: #666;
            margin-bottom: 10px;
        }
        
        .contact-info {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 10px;
            padding: 20px;
            margin-top: 30px;
            text-align: center;
        }
        
        .contact-info p {
            color: #856404;
            margin: 0;
        }
        
        @media (max-width: 768px) {
            .header h1 {
                font-size: 2.5rem;
            }
            
            .features, .download-section {
                padding: 40px 20px;
            }
            
            .feature-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header class="header">
            <h1>ADHDGoFly</h1>
            <p>Êô∫ËÉΩÈòÖËØªÂä©Êâã - ËÆ©ÁΩëÈ°µÈòÖËØªÊõ¥ËΩªÊùæÔºåËÆ©Â≠¶‰π†Êõ¥È´òÊïà</p>
        </header>
        
        <main class="main-content">
            <section class="features">
                <h2>Ê†∏ÂøÉÂäüËÉΩ</h2>
                <div class="feature-grid">
                    <div class="feature-card">
                        <div class="feature-icon">üéØ</div>
                        <h3>Êô∫ËÉΩËØçÊÄßÊ†áÊ≥®</h3>
                        <p>Ëá™Âä®ËØÜÂà´ÁΩëÈ°µÊñáÊú¨‰∏≠ÁöÑËØçÊÄßÔºåÁî®‰∏çÂêåÈ¢úËâ≤È´ò‰∫ÆÊòæÁ§∫ÂêçËØç„ÄÅÂä®ËØç„ÄÅÂΩ¢ÂÆπËØçÁ≠âÔºåÂ∏ÆÂä©ÁêÜËß£Âè•Â≠êÁªìÊûÑ</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">üåç</div>
                        <h3>Â§öËØ≠Ë®ÄÊîØÊåÅ</h3>
                        <p>ÊîØÊåÅ‰∏≠Êñá„ÄÅËã±Êñá„ÄÅÊó•Êñá„ÄÅÊ≥ïÊñá„ÄÅË•øÁè≠ÁâôÊñá„ÄÅ‰øÑÊñáÁ≠âÂ§öÁßçËØ≠Ë®ÄÁöÑÊô∫ËÉΩËØÜÂà´ÂíåÂ§ÑÁêÜ</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">‚ö°</div>
                        <h3>ÂÆûÊó∂Â§ÑÁêÜ</h3>
                        <p>È°µÈù¢Âä†ËΩΩÊó∂Ëá™Âä®Â§ÑÁêÜÊñáÊú¨ÔºåÊó†ÈúÄÊâãÂä®Êìç‰ΩúÔºåÊèê‰æõÊµÅÁïÖÁöÑÈòÖËØª‰ΩìÈ™å</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">üé®</div>
                        <h3>‰∏™ÊÄßÂåñËÆæÁΩÆ</h3>
                        <p>ÂèØËá™ÂÆö‰πâÈ¢úËâ≤ÊñπÊ°à„ÄÅÂºÄÂÖ≥ÁâπÂÆöÂäüËÉΩÔºåÊ†πÊçÆ‰∏™‰∫∫ÂñúÂ•ΩË∞ÉÊï¥ÈòÖËØªËæÖÂä©ÊïàÊûú</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">üîÑ</div>
                        <h3>Ëá™Âä®Êõ¥Êñ∞</h3>
                        <p>ÂÜÖÁΩÆÁâàÊú¨Ê£ÄÊµãÂäüËÉΩÔºåËá™Âä®ÊèêÈÜíÁî®Êà∑Êõ¥Êñ∞Âà∞ÊúÄÊñ∞ÁâàÊú¨ÔºåÁ°Æ‰øùÂäüËÉΩÂÆåÂñÑ</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">üöÄ</div>
                        <h3>ËΩªÈáèÈ´òÊïà</h3>
                        <p>‰ºòÂåñÁöÑÁÆóÊ≥ïËÆæËÆ°ÔºåÂç†Áî®ËµÑÊ∫êÂ∞ëÔºå‰∏çÂΩ±ÂìçÁΩëÈ°µÊ≠£Â∏∏ÊµèËßàÈÄüÂ∫¶</p>
                    </div>
                </div>
            </section>
            
            <section class="download-section">
                <h2>Á´ãÂç≥‰∏ãËΩΩ</h2>
                <p>ÈÄâÊã©ÈÄÇÂêàÊÇ®ÁöÑ‰∏ãËΩΩÊñπÂºèÔºåÂºÄÂßãÊõ¥Êô∫ËÉΩÁöÑÈòÖËØª‰ΩìÈ™å</p>
                
                <div class="download-options">
                    <a href="https://github.com/burenweiye/ADHDGoFly-Plugin/releases/latest" class="download-btn github" target="_blank">
                        üì¶ GitHub Release
                    </a>
                    <a href="#" class="download-btn baidu" onclick="alert('ÁôæÂ∫¶ÁΩëÁõòÈìæÊé•Ôºö\\nÈìæÊé•: https://pan.baidu.com/s/example\\nÊèêÂèñÁ†Å: abcd')">
                        ‚òÅÔ∏è ÁôæÂ∫¶ÁΩëÁõò‰∏ãËΩΩ
                    </a>
                </div>
                
                <div class="browser-downloads">
                     <h3 style="color: white; margin: 30px 0 20px 0;">ÈÄâÊã©ÈÄÇÂêàÊÇ®ÊµèËßàÂô®ÁöÑÁâàÊú¨:</h3>
                     <p style="color: rgba(255,255,255,0.8); margin-bottom: 20px; text-align: center;">
                         ÂΩìÂâçÁâàÊú¨: <strong>v${version}</strong> | ÂèëÂ∏ÉÊó∂Èó¥: ${new Date().toLocaleDateString('zh-CN')}
                     </p>
                     <div class="download-grid">
                         ${downloadLinksHtml}
                     </div>
                 </div>
                
                <div class="installation-guide">
                     <h3 style="color: white; margin: 40px 0 20px 0;">üìñ ÂÆâË£ÖÊåáÂçó</h3>
                     <div class="guide-grid">
                         <div class="guide-item">
                             <h4>üåê Chrome ÊµèËßàÂô®ÂÆâË£Ö</h4>
                             <ol>
                                 <li>‰∏ãËΩΩÂØπÂ∫îÁöÑ Chrome ÁâàÊú¨ zip Êñá‰ª∂</li>
                                 <li>Ëß£ÂéãÁº©Âà∞‰ªªÊÑèÊñá‰ª∂Â§π</li>
                                 <li>ÊâìÂºÄ ChromeÔºåËøõÂÖ• <code>chrome://extensions/</code></li>
                                 <li>ÂºÄÂêØÂè≥‰∏äËßíÁöÑ"ÂºÄÂèëËÄÖÊ®°Âºè"</li>
                                 <li>ÁÇπÂáª"Âä†ËΩΩÂ∑≤Ëß£ÂéãÁöÑÊâ©Â±ïÁ®ãÂ∫è"</li>
                                 <li>ÈÄâÊã©Ëß£ÂéãÂêéÁöÑÊñá‰ª∂Â§π</li>
                                 <li>Êèí‰ª∂ÂÆâË£ÖÂÆåÊàêÔºÅüéâ</li>
                             </ol>
                         </div>
                         <div class="guide-item">
                             <h4>üî∑ Edge ÊµèËßàÂô®ÂÆâË£Ö</h4>
                             <ol>
                                 <li>‰∏ãËΩΩÂØπÂ∫îÁöÑ Edge ÁâàÊú¨ zip Êñá‰ª∂</li>
                                 <li>Ëß£ÂéãÁº©Âà∞‰ªªÊÑèÊñá‰ª∂Â§π</li>
                                 <li>ÊâìÂºÄ EdgeÔºåËøõÂÖ• <code>edge://extensions/</code></li>
                                 <li>ÂºÄÂêØÂ∑¶‰∏ãËßíÁöÑ"ÂºÄÂèë‰∫∫ÂëòÊ®°Âºè"</li>
                                 <li>ÁÇπÂáª"Âä†ËΩΩËß£ÂéãÁº©ÁöÑÊâ©Â±ï"</li>
                                 <li>ÈÄâÊã©Ëß£ÂéãÂêéÁöÑÊñá‰ª∂Â§π</li>
                                 <li>Êèí‰ª∂ÂÆâË£ÖÂÆåÊàêÔºÅüéâ</li>
                             </ol>
                         </div>
                     </div>
                     <div class="tips-section">
                         <h4 style="color: #ffd700; margin: 20px 0 10px 0;">üí° ÂÆâË£ÖÂ∞èË¥¥Â£´</h4>
                         <ul>
                             <li>Á°Æ‰øù‰∏ãËΩΩÁöÑÁâàÊú¨‰∏éÊÇ®ÁöÑÊµèËßàÂô®ÂåπÈÖç</li>
                             <li><strong>‚ö†Ô∏è ÈáçË¶ÅÔºöËß£ÂéãÂêéËØ∑‰øùÁïôÊñá‰ª∂Â§πÔºåÂà†Èô§‰ºöÂØºËá¥Êèí‰ª∂Â§±ÊïàÔºÅ</strong></li>
                             <li>È¶ñÊ¨°ÂÆâË£ÖÂèØËÉΩÈúÄË¶ÅÈáçÂêØÊµèËßàÂô®</li>
                             <li>Â¶ÇÈÅáÈóÆÈ¢òÔºåËØ∑Ê£ÄÊü•ÊµèËßàÂô®ÁâàÊú¨ÊòØÂê¶ÊîØÊåÅ Manifest V3</li>
                         </ul>
                     </div>
                 </div>
                 
                 <div class="contact-info">
                     <p>Â¶ÇÊûú‰∏ãËΩΩÈìæÊé•ÈÉΩ‰∏çÂèØÁî®ÔºåËØ∑ËÅîÁ≥ª WeChat: zuoguyoupan2023</p>
                 </div>
            </section>
        </main>
        
        <footer class="version-info">
            <p><strong>ÂΩìÂâçÁâàÊú¨:</strong> v${version}</p>
            <p>ÈÄÇÁî®‰∫é Chrome„ÄÅEdge„ÄÅFirefox Á≠âÁé∞‰ª£ÊµèËßàÂô®</p>
            <p>¬© 2024 ADHDGoFly Plugin. ‰∏ì‰∏∫ÊèêÂçáÈòÖËØª‰ΩìÈ™åËÄåËÆæËÆ°„ÄÇ</p>
        </footer>
    </div>
</body>
</html>`;
    
            const indexPath = path.join(outputDir, 'index.html');
            fs.writeFileSync(indexPath, indexTemplate);
            console.log('‚úÖ Landing page ÁîüÊàêÂÆåÊàê');
            
        } catch (error) {
            console.error('‚ùå ÁîüÊàê landing page Â§±Ë¥•:', error.message);
            process.exit(1);
        }
        
        console.log('');
        console.log('üéâ ÊûÑÂª∫ÂÆåÊàêÔºÅÂèØ‰ª•ÈÉ®ÁΩ≤Âà∞ Cloudflare Pages ‰∫Ü');
         console.log('üìã ÈÉ®ÁΩ≤Êñá‰ª∂ÂàóË°®:');
         console.log(`   - index.html (Â§öÊµèËßàÂô®‰∏ãËΩΩÈ°µÈù¢)`);
         buildResults.forEach(result => {
             console.log(`   - ${result.zipName} (${result.browser.toUpperCase()} ÁâàÊú¨, ${result.size}MB)`);
         });
         console.log('');
         console.log('üöÄ Cloudflare Pages Â∞ÜËá™Âä®ÈÉ®ÁΩ≤Ëøô‰∫õÊñá‰ª∂');
         console.log('üåê Áî®Êà∑ÂèØ‰ª•ÈÄâÊã©‰∏ãËΩΩÈÄÇÂêàÁöÑÊµèËßàÂô®ÁâàÊú¨');
}

// ËøêË°å‰∏ªÂáΩÊï∞
main().catch(error => {
    console.error('‚ùå ÊûÑÂª∫Â§±Ë¥•:', error.message);
    process.exit(1);
});

// Node.jsÂéüÁîüÂéãÁº©ÂáΩÊï∞
function createZipFile(zipName, includeFiles, browserName, tempManifestPath) {
    return new Promise((resolve, reject) => {
        const output = fs.createWriteStream(zipName);
        const archive = archiver('zip', { zlib: { level: 9 } });
        
        output.on('close', () => {
            console.log(`üì¶ ÂéãÁº©ÂÆåÊàê: ${archive.pointer()} bytes`);
            resolve();
        });
        
        archive.on('error', (err) => {
            reject(err);
        });
        
        archive.pipe(output);
        
        // Ê∑ªÂä†Êñá‰ª∂ÂíåÁõÆÂΩï
        includeFiles.forEach(item => {
            if (fs.existsSync(item)) {
                const stat = fs.statSync(item);
                if (stat.isDirectory()) {
                    console.log(`üìÅ Ê∑ªÂä†ÁõÆÂΩï: ${item}`);
                    archive.directory(item, item);
                } else {
                    console.log(`üìÑ Ê∑ªÂä†Êñá‰ª∂: ${item}`);
                    // Â¶ÇÊûúÊòØ‰∏¥Êó∂manifestÊñá‰ª∂ÔºåÈáçÂëΩÂêç‰∏∫manifest.json
                    const fileName = item === tempManifestPath ? 'manifest.json' : item;
                    archive.file(item, { name: fileName });
                }
            } else {
                console.warn(`‚ö†Ô∏è  Êñá‰ª∂‰∏çÂ≠òÂú®ÔºåË∑≥Ëøá: ${item}`);
            }
        });
        
        archive.finalize();
    });
}